openapi: 3.0.3
info:
  title: Aha! REST API
  description: API for interacting with Aha! product management platform.
  version: 1.0.0

servers:
  - url: https://{subdomain}.aha.io/api/v1
    description: Aha! API server
    variables:
      subdomain:
        default: mycompany
        description: Your Aha! account subdomain

paths:
  /users:
    get:
      summary: List users
      description: Fetches a list of users associated with the Aha! account.
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      summary: Get a specific user
      description: Retrieves details of a specific user by their ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /releases/{release_id}/features:
    post:
      summary: Create a feature
      description: Adds a new feature to a specified release.
      parameters:
        - name: release_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureCreateRequest'
      responses:
        '201':
          description: Feature created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'

  /features/{feature_id}/comments:
    post:
      summary: Create a comment on a feature
      description: Adds a new comment to the specified feature.
      parameters:
        - name: feature_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreateRequest'
      responses:
        '201':
          description: Comment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

  /epics/{epic_id}/comments:
    get:
      summary: List comments on an epic
      description: Retrieves a list of comments associated with the specified epic.
      parameters:
        - name: epic_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
        '400':
          description: Invalid input
        '404':
          description: Epic not found

  /requirements/{requirement_id}/comments:
    get:
      summary: List comments on a requirement
      description: Retrieves a list of comments associated with the specified requirement.
      parameters:
        - name: requirement_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
        '400':
          description: Invalid input
        '404':
          description: Requirement not found

  /ideas/{idea_id}/comments:
    get:
      summary: List comments on an idea
      description: Retrieves a list of comments associated with the specified idea.
      parameters:
        - name: idea_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'

  /initiatives/{initiative_id}/comments:
    get:
      summary: List comments on an initiative
      description: Retrieves a list of comments associated with the specified initiative.
      parameters:
        - name: initiative_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'

  /goals/{goal_id}/comments:
    get:
      summary: List comments on a goal
      description: Retrieves a list of comments associated with the specified goal.
      parameters:
        - name: goal_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'

  /releases/{release_id}/comments:
    get:
      summary: List comments on a release
      description: Retrieves a list of comments associated with the specified release.
      parameters:
        - name: release_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'

  /release_phases/{release_phase_id}/comments:
    get:
      summary: List comments on a release phase
      description: Retrieves a list of comments associated with the specified release phase.
      parameters:
        - name: release_phase_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'

  /todos/{todo_id}/comments:
    get:
      summary: List comments on a to-do
      description: Retrieves a list of comments associated with the specified to-do.
      parameters:
        - name: todo_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'

  /products/{product_id}/comments:
    get:
      summary: List comments in a product
      description: Retrieves a list of comments associated with the specified product.
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string

    FeatureCreateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        start_date:
          type: string
          format: date
        due_date:
          type: string
          format: date

    Feature:
      allOf:
        - $ref: '#/components/schemas/FeatureCreateRequest'
        - type: object
          properties:
            id:
              type: string
            release_id:
              type: string

    CommentCreateRequest:
      type: object
      properties: